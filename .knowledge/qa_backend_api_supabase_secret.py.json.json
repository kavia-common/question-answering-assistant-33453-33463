{"is_source_file": true, "format": "Python", "description": "This source file contains a function to retrieve the OpenAI API key from a Supabase secret store via a REST API call. It includes environment variable checks, HTTP request preparations, and JSON response parsing.", "external_files": ["os", "json", "logging", "typing", "urllib.request", "urllib.error"], "external_methods": ["os.getenv", "json.dumps", "json.loads", "urllib.request.Request", "urllib.request.urlopen"], "published": ["get_openai_api_key_from_supabase"], "classes": [], "methods": [{"name": "Optional[str] get_openai_api_key_from_supabase()", "description": "Fetches the OpenAI API key from Supabase's secret store via an HTTP POST request to a specific RPC endpoint, with fallback to environment variables and JSON parsing.", "scope": "", "scopeKind": ""}], "calls": ["os.getenv", "json.dumps", "json.loads", "urllib.request.Request", "urllib.request.urlopen"], "search-terms": ["get_openai_api_key", "supabase_secret", "REST API", "get_secret RPC", "decrypted secret", "Supabase API Key fetch", "Supabase environment variables"], "state": 2, "file_id": 22, "knowledge_revision": 54, "git_revision": "", "ctags": [{"_type": "tag", "name": "get_openai_api_key_from_supabase", "path": "/home/kavia/workspace/code-generation/question-answering-assistant-33453-33463/qa_backend/api/supabase_secret.py", "pattern": "/^def get_openai_api_key_from_supabase() -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "()"}], "hash": "9f11f4579fa5339f22c844c5f6d62b38", "format-version": 4, "code-base-name": "qa_backend", "filename": "qa_backend/api/supabase_secret.py", "revision_history": [{"54": ""}]}