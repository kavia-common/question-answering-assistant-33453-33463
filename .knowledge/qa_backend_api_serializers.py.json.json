{"is_source_file": true, "format": "Python", "description": "Defines serializers for QARecord model and question submission in a Django Rest Framework project.", "external_files": ["rest_framework.serializers", "./models"], "external_methods": ["serializers.ModelSerializer", "serializers.CharField"], "published": ["QARecordSerializer", "AskQuestionSerializer"], "classes": [{"name": "QARecordSerializer", "description": "Serializer for reading QA records, including id, question, answer, and created_at fields."}, {"name": "AskQuestionSerializer", "description": "Serializer for accepting a question submission, including only the 'question' field."}], "methods": [{"name": "Meta", "description": "Defines model and fields for QARecordSerializer."}, {"name": "question (in AskQuestionSerializer)", "description": "CharField for user question input, with validators for non-blank and whitespace trimming."}], "calls": ["serializers.ModelSerializer", "serializers.CharField"], "search-terms": ["QARecordSerializer", "AskQuestionSerializer", "serializers", "Django Rest Framework", "questions", "answers", "serialization"], "state": 2, "file_id": 19, "knowledge_revision": 40, "git_revision": "", "ctags": [{"_type": "tag", "name": "AskQuestionSerializer", "path": "/home/kavia/workspace/code-generation/question-answering-assistant-33453-33463/qa_backend/api/serializers.py", "pattern": "/^class AskQuestionSerializer(serializers.Serializer):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Meta", "path": "/home/kavia/workspace/code-generation/question-answering-assistant-33453-33463/qa_backend/api/serializers.py", "pattern": "/^    class Meta:$/", "language": "Python", "kind": "class", "scope": "QARecordSerializer", "scopeKind": "class"}, {"_type": "tag", "name": "QARecordSerializer", "path": "/home/kavia/workspace/code-generation/question-answering-assistant-33453-33463/qa_backend/api/serializers.py", "pattern": "/^class QARecordSerializer(serializers.ModelSerializer):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "fields", "path": "/home/kavia/workspace/code-generation/question-answering-assistant-33453-33463/qa_backend/api/serializers.py", "pattern": "/^        fields = [\"id\", \"question\", \"answer\", \"created_at\"]$/", "language": "Python", "kind": "variable", "scope": "QARecordSerializer.Meta", "scopeKind": "class"}, {"_type": "tag", "name": "model", "path": "/home/kavia/workspace/code-generation/question-answering-assistant-33453-33463/qa_backend/api/serializers.py", "pattern": "/^        model = QARecord$/", "language": "Python", "kind": "variable", "scope": "QARecordSerializer.Meta", "scopeKind": "class"}, {"_type": "tag", "name": "question", "path": "/home/kavia/workspace/code-generation/question-answering-assistant-33453-33463/qa_backend/api/serializers.py", "pattern": "/^    question = serializers.CharField($/", "language": "Python", "kind": "variable", "scope": "AskQuestionSerializer", "scopeKind": "class"}, {"_type": "tag", "name": "read_only_fields", "path": "/home/kavia/workspace/code-generation/question-answering-assistant-33453-33463/qa_backend/api/serializers.py", "pattern": "/^        read_only_fields = [\"id\", \"answer\", \"created_at\"]$/", "language": "Python", "kind": "variable", "scope": "QARecordSerializer.Meta", "scopeKind": "class"}], "hash": "53c3cc24a8eacc40b37dbccde6d38f57", "format-version": 4, "code-base-name": "qa_backend", "filename": "qa_backend/api/serializers.py", "fields": [{"name": "fields = [\"id\", \"question\", \"answer\", \"created_at\"]", "scope": "QARecordSerializer.Meta", "scopeKind": "class", "description": "unavailable"}, {"name": "model = QARecord", "scope": "QARecordSerializer.Meta", "scopeKind": "class", "description": "unavailable"}, {"name": "question = serializers.CharField(", "scope": "AskQuestionSerializer", "scopeKind": "class", "description": "unavailable"}, {"name": "read_only_fields = [\"id\", \"answer\", \"created_at\"]", "scope": "QARecordSerializer.Meta", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"40": ""}]}